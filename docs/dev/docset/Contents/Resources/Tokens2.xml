<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/ECClient.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/ECClient</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.h</DeclaredIn>
            
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/setDelegate:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) id&lt;ECClientDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/delegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) id&lt;ECClientDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ECClient/delegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) id&lt;ECClientDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/setServerConfiguration:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSDictionary *serverConfiguration</Declaration>
			
			
			<Anchor>//api/name/serverConfiguration</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/serverConfiguration</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSDictionary *serverConfiguration</Declaration>
			
			
			<Anchor>//api/name/serverConfiguration</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ECClient/serverConfiguration</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSDictionary *serverConfiguration</Declaration>
			
			
			<Anchor>//api/name/serverConfiguration</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/setLocalStream:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) RTCMediaStream *localStream</Declaration>
			
			
			<Anchor>//api/name/localStream</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/localStream</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) RTCMediaStream *localStream</Declaration>
			
			
			<Anchor>//api/name/localStream</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ECClient/localStream</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) RTCMediaStream *localStream</Declaration>
			
			
			<Anchor>//api/name/localStream</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/initWithDelegate:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithDelegate:(id&lt;ECClientDelegate&gt;)delegate</Declaration>
			
			
			<Anchor>//api/name/initWithDelegate:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/disconnect</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.h</DeclaredIn>
			
			<Declaration>- (void)disconnect</Declaration>
			
			
			<Anchor>//api/name/disconnect</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/setRemoteSessionDescription:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.h</DeclaredIn>
			
			<Declaration>- (void)setRemoteSessionDescription:(NSDictionary *)descriptionMessage</Declaration>
			
			
			<Anchor>//api/name/setRemoteSessionDescription:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/setState:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)setState:(ECClientState)newState</Declaration>
			
			
			<Anchor>//api/name/setState:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/dealloc</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)dealloc</Declaration>
			
			
			<Anchor>//api/name/dealloc</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/defaultPeerConnectionConstraints</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (RTCMediaConstraints *)defaultPeerConnectionConstraints</Declaration>
			
			
			<Anchor>//api/name/defaultPeerConnectionConstraints</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/defaultAnswerConstraints</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (RTCMediaConstraints *)defaultAnswerConstraints</Declaration>
			
			
			<Anchor>//api/name/defaultAnswerConstraints</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/defaultOfferConstraints</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (RTCMediaConstraints *)defaultOfferConstraints</Declaration>
			
			
			<Anchor>//api/name/defaultOfferConstraints</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/signalingChannelDidOpenChannel:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)signalingChannelDidOpenChannel:(ECSignalingChannel *)signalingChannel</Declaration>
			
			
			<Anchor>//api/name/signalingChannelDidOpenChannel:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/signalingChannelDidGetReadyToPublish:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)signalingChannelDidGetReadyToPublish:(ECSignalingChannel *)signalingChannel</Declaration>
			
			
			<Anchor>//api/name/signalingChannelDidGetReadyToPublish:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/signalingChannel:didReceiveServerConfiguration:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)signalingChannel:(ECSignalingChannel *)channel didReceiveServerConfiguration:(NSDictionary *)serverConfiguration</Declaration>
			
			
			<Anchor>//api/name/signalingChannel:didReceiveServerConfiguration:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/signalingChannel:didReceiveMessage:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)signalingChannel:(ECSignalingChannel *)channel didReceiveMessage:(ECSignalingMessage *)message</Declaration>
			
			
			<Anchor>//api/name/signalingChannel:didReceiveMessage:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/peerConnection:signalingStateChanged:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)peerConnection:(RTCPeerConnection *)peerConnection signalingStateChanged:(RTCSignalingState)stateChanged</Declaration>
			
			
			<Anchor>//api/name/peerConnection:signalingStateChanged:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/peerConnection:addedStream:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)peerConnection:(RTCPeerConnection *)peerConnection addedStream:(RTCMediaStream *)stream</Declaration>
			
			
			<Anchor>//api/name/peerConnection:addedStream:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/peerConnection:removedStream:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)peerConnection:(RTCPeerConnection *)peerConnection removedStream:(RTCMediaStream *)stream</Declaration>
			
			
			<Anchor>//api/name/peerConnection:removedStream:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/peerConnectionOnRenegotiationNeeded:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)peerConnectionOnRenegotiationNeeded:(RTCPeerConnection *)peerConnection</Declaration>
			
			
			<Anchor>//api/name/peerConnectionOnRenegotiationNeeded:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/peerConnection:iceConnectionChanged:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)peerConnection:(RTCPeerConnection *)peerConnection iceConnectionChanged:(RTCICEConnectionState)newState</Declaration>
			
			
			<Anchor>//api/name/peerConnection:iceConnectionChanged:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/peerConnection:iceGatheringChanged:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)peerConnection:(RTCPeerConnection *)peerConnection iceGatheringChanged:(RTCICEGatheringState)newState</Declaration>
			
			
			<Anchor>//api/name/peerConnection:iceGatheringChanged:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/peerConnection:gotICECandidate:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)peerConnection:(RTCPeerConnection *)peerConnection gotICECandidate:(RTCICECandidate *)candidate</Declaration>
			
			
			<Anchor>//api/name/peerConnection:gotICECandidate:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/peerConnection:didOpenDataChannel:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)peerConnection:(RTCPeerConnection *)peerConnection didOpenDataChannel:(RTCDataChannel *)dataChannel</Declaration>
			
			
			<Anchor>//api/name/peerConnection:didOpenDataChannel:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/peerConnection:didCreateSessionDescription:error:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)peerConnection:(RTCPeerConnection *)peerConnection didCreateSessionDescription:(RTCSessionDescription *)sdp error:(NSError *)error</Declaration>
			
			
			<Anchor>//api/name/peerConnection:didCreateSessionDescription:error:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/peerConnection:didSetSessionDescriptionWithError:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)peerConnection:(RTCPeerConnection *)peerConnection didSetSessionDescriptionWithError:(NSError *)error</Declaration>
			
			
			<Anchor>//api/name/peerConnection:didSetSessionDescriptionWithError:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/startPublishSignaling</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)startPublishSignaling</Declaration>
			
			
			<Anchor>//api/name/startPublishSignaling</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/drainMessageQueueIfReady</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)drainMessageQueueIfReady</Declaration>
			
			
			<Anchor>//api/name/drainMessageQueueIfReady</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/processSignalingMessage:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient.m</DeclaredIn>
			
			<Declaration>- (void)processSignalingMessage:(ECSignalingMessage *)message</Declaration>
			
			
			<Anchor>//api/name/processSignalingMessage:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/setPeerConnection:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) RTCPeerConnection *peerConnection</Declaration>
			
			
			<Anchor>//api/name/peerConnection</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/peerConnection</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) RTCPeerConnection *peerConnection</Declaration>
			
			
			<Anchor>//api/name/peerConnection</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ECClient/peerConnection</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) RTCPeerConnection *peerConnection</Declaration>
			
			
			<Anchor>//api/name/peerConnection</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/setFactory:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) RTCPeerConnectionFactory *factory</Declaration>
			
			
			<Anchor>//api/name/factory</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/factory</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) RTCPeerConnectionFactory *factory</Declaration>
			
			
			<Anchor>//api/name/factory</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ECClient/factory</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) RTCPeerConnectionFactory *factory</Declaration>
			
			
			<Anchor>//api/name/factory</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/setMessageQueue:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray *messageQueue</Declaration>
			
			
			<Anchor>//api/name/messageQueue</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/messageQueue</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray *messageQueue</Declaration>
			
			
			<Anchor>//api/name/messageQueue</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ECClient/messageQueue</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray *messageQueue</Declaration>
			
			
			<Anchor>//api/name/messageQueue</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/setHasReceivedSdp:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL hasReceivedSdp</Declaration>
			
			
			<Anchor>//api/name/hasReceivedSdp</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/hasReceivedSdp</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL hasReceivedSdp</Declaration>
			
			
			<Anchor>//api/name/hasReceivedSdp</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ECClient/hasReceivedSdp</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL hasReceivedSdp</Declaration>
			
			
			<Anchor>//api/name/hasReceivedSdp</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/setSignalingChannel:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) ECSignalingChannel *signalingChannel</Declaration>
			
			
			<Anchor>//api/name/signalingChannel</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/signalingChannel</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) ECSignalingChannel *signalingChannel</Declaration>
			
			
			<Anchor>//api/name/signalingChannel</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ECClient/signalingChannel</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) ECSignalingChannel *signalingChannel</Declaration>
			
			
			<Anchor>//api/name/signalingChannel</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/setIsInitiator:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isInitiator</Declaration>
			
			
			<Anchor>//api/name/isInitiator</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/isInitiator</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isInitiator</Declaration>
			
			
			<Anchor>//api/name/isInitiator</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ECClient/isInitiator</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isInitiator</Declaration>
			
			
			<Anchor>//api/name/isInitiator</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/setIceServers:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray *iceServers</Declaration>
			
			
			<Anchor>//api/name/iceServers</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/iceServers</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray *iceServers</Declaration>
			
			
			<Anchor>//api/name/iceServers</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ECClient/iceServers</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray *iceServers</Declaration>
			
			
			<Anchor>//api/name/iceServers</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/setDefaultPeerConnectionConstraints:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) RTCMediaConstraints *defaultPeerConnectionConstraints</Declaration>
			
			
			<Anchor>//api/name/defaultPeerConnectionConstraints</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ECClient/defaultPeerConnectionConstraints</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) RTCMediaConstraints *defaultPeerConnectionConstraints</Declaration>
			
			
			<Anchor>//api/name/defaultPeerConnectionConstraints</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ECClient/defaultPeerConnectionConstraints</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ECClient+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) RTCMediaConstraints *defaultPeerConnectionConstraints</Declaration>
			
			
			<Anchor>//api/name/defaultPeerConnectionConstraints</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
        
        
	</File>
</Tokens>